//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace doc_mapper.nuget.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("doc_mapper.nuget.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на completed.
        /// </summary>
        public static string Completed {
            get {
                return ResourceManager.GetString("Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error.
        /// </summary>
        public static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error adding comment &apos;{0}&apos; to row &apos;{1}&apos; and column &apos;{2}&apos;.
        /// </summary>
        public static string ErrorAddCommentToCell {
            get {
                return ResourceManager.GetString("ErrorAddCommentToCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error creating a file.
        /// </summary>
        public static string ErrorCreateFileAndFillCells {
            get {
                return ResourceManager.GetString("ErrorCreateFileAndFillCells", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error adding new docmapper.
        /// </summary>
        public static string ErrorDocmapperAdd {
            get {
                return ResourceManager.GetString("ErrorDocmapperAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error adding new docmapper column.
        /// </summary>
        public static string ErrorDocmapperColumnAdd {
            get {
                return ResourceManager.GetString("ErrorDocmapperColumnAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error getting list docmapper columns.
        /// </summary>
        public static string ErrorDocmapperColumnGetAll {
            get {
                return ResourceManager.GetString("ErrorDocmapperColumnGetAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error updating document content.
        /// </summary>
        public static string ErrorDocmapperContentUpdate {
            get {
                return ResourceManager.GetString("ErrorDocmapperContentUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error getting list docmappers.
        /// </summary>
        public static string ErrorDocmapperGetAll {
            get {
                return ResourceManager.GetString("ErrorDocmapperGetAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error getting filtered list docmappers.
        /// </summary>
        public static string ErrorDocmapperGetAllFiltered {
            get {
                return ResourceManager.GetString("ErrorDocmapperGetAllFiltered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error updating docmapper.
        /// </summary>
        public static string ErrorDocmapperUpdate {
            get {
                return ResourceManager.GetString("ErrorDocmapperUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error, document content with docmapper column id {0} not found.
        /// </summary>
        public static string ErrorDocumentContentWithDocmapperColumnIdNotFound {
            get {
                return ResourceManager.GetString("ErrorDocumentContentWithDocmapperColumnIdNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error, document content with id {0} not found.
        /// </summary>
        public static string ErrorDocumentContentWithIdNotFound {
            get {
                return ResourceManager.GetString("ErrorDocumentContentWithIdNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error, document with id {0} not found.
        /// </summary>
        public static string ErrorDocumentWithIdNotFound {
            get {
                return ResourceManager.GetString("ErrorDocumentWithIdNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error header validation on a line №&apos;{0}&apos; in place of the expected &apos;{1}&apos; is located &apos;{2}.
        /// </summary>
        public static string ErrorExcelHeaderValidation {
            get {
                return ResourceManager.GetString("ErrorExcelHeaderValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error, sheet &apos;{0}&apos; was not found.
        /// </summary>
        public static string ErrorExcelSheetNotFound {
            get {
                return ResourceManager.GetString("ErrorExcelSheetNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error filling cells in the document &apos;{0}&apos; on sheet name &apos;{1}&apos;.
        /// </summary>
        public static string ErrorHighlightCell {
            get {
                return ResourceManager.GetString("ErrorHighlightCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error parsing a file &apos;{0}&apos; from a sheet &apos;{1}.
        /// </summary>
        public static string ErrorReadExcel {
            get {
                return ResourceManager.GetString("ErrorReadExcel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error getting user by account &apos;{0}&apos;.
        /// </summary>
        public static string ErrorUserGetByAccount {
            get {
                return ResourceManager.GetString("ErrorUserGetByAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error, the user with the account &apos;{0}&apos; was not found.
        /// </summary>
        public static string ErrorUserWithAccountNotFound {
            get {
                return ResourceManager.GetString("ErrorUserWithAccountNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на adding comment &apos;{0}&apos; to row &apos;{1}&apos; and column &apos;{2}&apos;.
        /// </summary>
        public static string LogAddCommentToCell {
            get {
                return ResourceManager.GetString("LogAddCommentToCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на creating file.
        /// </summary>
        public static string LogCreateFileAndFillCells {
            get {
                return ResourceManager.GetString("LogCreateFileAndFillCells", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на adding new docmapper.
        /// </summary>
        public static string LogDocmapperAdd {
            get {
                return ResourceManager.GetString("LogDocmapperAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на adding new docmapper column.
        /// </summary>
        public static string LogDocmapperColumnAdd {
            get {
                return ResourceManager.GetString("LogDocmapperColumnAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на getting list docmapper columns.
        /// </summary>
        public static string LogDocmapperColumnGetAll {
            get {
                return ResourceManager.GetString("LogDocmapperColumnGetAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на updating document content.
        /// </summary>
        public static string LogDocmapperContentUpdate {
            get {
                return ResourceManager.GetString("LogDocmapperContentUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на getting list docmappers.
        /// </summary>
        public static string LogDocmapperGetAll {
            get {
                return ResourceManager.GetString("LogDocmapperGetAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на getting filtered list docmappers.
        /// </summary>
        public static string LogDocmapperGetAllFiltered {
            get {
                return ResourceManager.GetString("LogDocmapperGetAllFiltered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на updating docmapper.
        /// </summary>
        public static string LogDocmapperUpdate {
            get {
                return ResourceManager.GetString("LogDocmapperUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на error.
        /// </summary>
        public static string LogError {
            get {
                return ResourceManager.GetString("LogError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на filling cells in the document &apos;{0}&apos; on sheet name &apos;{1}&apos;.
        /// </summary>
        public static string LogHighlightCell {
            get {
                return ResourceManager.GetString("LogHighlightCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на parsing a file &apos;{0}&apos; from a sheet &apos;{1}.
        /// </summary>
        public static string LogReadExcel {
            get {
                return ResourceManager.GetString("LogReadExcel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на getting user by account &apos;{0}&apos;.
        /// </summary>
        public static string LogUserGetByAccount {
            get {
                return ResourceManager.GetString("LogUserGetByAccount", resourceCulture);
            }
        }
    }
}
